{"version":3,"sources":["webpack:///./src/lib/components/DashSeqaln.react.js"],"names":["DashSeqaln","props","id","title","alignment","included","excluded","series","color_scheme","setProps","_props$allow_sequence","allow_sequence_selection","_props$show_letters","show_letters","_props$show_seqnum","show_seqnum","_props$zoom","zoom","setIncluded","items","map","x","name","setExcluded","sequence_selection_component","React","createElement","Fragment","Seqselection","alignment_cumsum","useMemo","get_alignment_cumsum","alignment_colors","make_color_scheme","aln_breaks","i","Object","keys","length","push","String","className","seriesItem","key","label","style","make_series_scale","breaks","rescale_series","values","value","index","height","color","colSpan","seqId","seqIndex","split","letter","min","max","breaks_width","arguments","undefined","breaks_rescaled","concat","toFixed","scheme","seqIds","aln_length","colors","forEach","_loop","column","column_colors","color_msa_column","res","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","val","cumsum","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","_ref","includedItems","make_sortablejs_items","excludedItems","ReactSortable","group","list","setList","item","l","selected","chosen","filtered","defaultProps","propTypes","PropTypes","string","isRequired","object","array","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAiD;AACd;AACc;AACjB;AAC2B;;AAE3D;;AAEA;AACA;AACA;AACe,SAASA,UAAUA,CAACC,KAAK,EAAE;EACxC,IAAOC,EAAE,GAA0ED,KAAK,CAAjFC,EAAE;IAAEC,KAAK,GAAmEF,KAAK,CAA7EE,KAAK;IAAEC,SAAS,GAAwDH,KAAK,CAAtEG,SAAS;IAAEC,QAAQ,GAA8CJ,KAAK,CAA3DI,QAAQ;IAAEC,QAAQ,GAAoCL,KAAK,CAAjDK,QAAQ;IAAEC,MAAM,GAA4BN,KAAK,CAAvCM,MAAM;IAAEC,YAAY,GAAcP,KAAK,CAA/BO,YAAY;IAAEC,QAAQ,GAAIR,KAAK,CAAjBQ,QAAQ;EAC/E,IAAAC,qBAAA,GAA+FT,KAAK,CAA7FU,wBAAwB;IAAxBA,wBAAwB,GAAAD,qBAAA,cAAG,IAAI,GAAAA,qBAAA;IAAAE,mBAAA,GAAyDX,KAAK,CAA5DY,YAAY;IAAZA,YAAY,GAAAD,mBAAA,cAAG,IAAI,GAAAA,mBAAA;IAAAE,kBAAA,GAAoCb,KAAK,CAAvCc,WAAW;IAAXA,WAAW,GAAAD,kBAAA,cAAG,KAAK,GAAAA,kBAAA;IAAAE,WAAA,GAAef,KAAK,CAAlBgB,IAAI;IAAJA,IAAI,GAAAD,WAAA,cAAG,EAAE,GAAAA,WAAA;EAC3F,IAAME,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAK;IAC7BV,QAAQ,CAAC;MAACJ,QAAQ,EAAEc,KAAK,CAACC,GAAG,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,CAACC,IAAI;MAAA;IAAC,CAAC,CAAC;EAChD,CAAC;EACD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIJ,KAAK,EAAK;IAC7BV,QAAQ,CAAC;MAACH,QAAQ,EAAEa,KAAK,CAACC,GAAG,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,CAACC,IAAI;MAAA;IAAC,CAAC,CAAC;EAChD,CAAC;EACD,IAAIE,4BAA4B,gBAAGC,4CAAA,CAAAC,aAAA,CAAAD,4CAAA,CAAAE,QAAA,MAAI,CAAC;EACxC,IAAIhB,wBAAwB,KAAK,IAAI,EAAE;IACrCa,4BAA4B,GAAGI,YAAY,CAAC;MAC1C1B,EAAE,EAAEA,EAAE;MACNG,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA,QAAQ;MAClBY,WAAW,EAAEA,WAAW;MACxBK,WAAW,EAAEA;IACf,CAAC,CAAC;EACJ;EACA,IAAMM,gBAAgB,GAAGC,qDAAO,CAAC;IAAA,OAAMC,oBAAoB,CAAC3B,SAAS,CAAC;EAAA,GAAE,CAACA,SAAS,CAAC,CAAC;EACpF,IAAM4B,gBAAgB,GAAGF,qDAAO,CAAC;IAAA,OAAMG,iBAAiB,CAAC7B,SAAS,EAAEI,YAAY,CAAC;EAAA,GAAE,CAACJ,SAAS,EAAEI,YAAY,CAAC,CAAC;EAC7G,IAAM0B,UAAU,GAAG,EAAE;EACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG/B,SAAS,CAACgC,MAAM,CAACC,IAAI,CAACjC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAACkC,MAAM,EAAEH,CAAC,EAAE,EAAE;IACpE,IAAIA,CAAC,GAAG,EAAE,KAAK,CAAC,EACdD,UAAU,CAACK,IAAI,CAACC,MAAM,CAACL,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,KAE7BD,UAAU,CAACK,IAAI,CAAC,EAAE,CAAC;EACvB;EACA,oBACEd,4CAAA,CAAAC,aAAA;IAAKxB,EAAE,EAAEA,EAAG;IAACuC,SAAS,EAAC;EAAY,GAChCtC,KAAK,iBAAKsB,4CAAA,CAAAC,aAAA;IAAIe,SAAS,EAAC;EAAO,GAAEtC,KAAU,CAAE,eAC9CsB,4CAAA,CAAAC,aAAA,gBACGnB,MAAM,CAACa,GAAG,CAAC,UAACsB,UAAU;IAAA,oBACrBjB,4CAAA,CAAAC,aAAA;MAAOiB,GAAG,EAAE,SAAS,GAACD,UAAU,CAACE,KAAM;MAACH,SAAS,EAAC;IAAQ,gBAC1DhB,4CAAA,CAAAC,aAAA,0BACED,4CAAA,CAAAC,aAAA;MAAIe,SAAS,EAAC;IAAc,GACzBC,UAAU,CAACE,KACV,CAAC,eACLnB,4CAAA,CAAAC,aAAA;MAAIe,SAAS,EAAC,cAAc;MAACI,KAAK,EAAE;QAAC,UAAU,EAAE,UAAU;QAAE,aAAa,EAAE;MAAiB;IAAE,GAC5FC,iBAAiB,CAACJ,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,MAAM,CACnC,CAAC,EACJC,cAAc,CAACN,UAAU,CAACO,MAAM,EAAEP,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,MAAM,CAAC,CAAC3B,GAAG,CAAC,UAAC8B,KAAK,EAAEC,KAAK;MAAA,oBACtE1B,4CAAA,CAAAC,aAAA;QAAIiB,GAAG,EAAE,SAAS,GAACQ,KAAM;QAACV,SAAS,EAAC,eAAe;QAACI,KAAK,EAAE;UAAC,QAAQ,EAAEH,UAAU,CAACU,MAAM,IAAI;QAAO;MAAE,gBAClG3B,4CAAA,CAAAC,aAAA;QAAKmB,KAAK,EAAE;UAAC,iBAAiB,EAAEH,UAAU,CAACW,KAAK,IAAI,OAAO;UAAE,QAAQ,EAAG,GAAG,GAAGH,KAAK,GAAI,GAAG;UAAE,UAAU,EAAE;QAAU;MAAE,gBAClHzB,4CAAA,CAAAC,aAAA;QAAMe,SAAS,EAAC;MAAuB,GAAGU,KAAK,GAAG,CAAC,GAAI,GAAG,GAAGT,UAAU,CAACO,MAAM,CAACE,KAAK,CAAQ,CACzF,CACH,CAAC;IAAA,CACN,CACC,CAAC,eACL1B,4CAAA,CAAAC,aAAA,0BAAID,4CAAA,CAAAC,aAAA;MAAI4B,OAAO,EAAC,MAAM;MAACb,SAAS,EAAC;IAAkB,CAAK,CAAK,CACtD,CAAC;EAAA,CACT,CAAC,eACJhB,4CAAA,CAAAC,aAAA;IAAOe,SAAS,EAAC;EAAK,gBACpBhB,4CAAA,CAAAC,aAAA;IAAIe,SAAS,EAAC;EAAU,gBACtBhB,4CAAA,CAAAC,aAAA;IAAIe,SAAS,EAAC;EAAgB,CAAK,CAAC,eACpChB,4CAAA,CAAAC,aAAA;IAAIe,SAAS,EAAC;EAAiB,CAAK,CAAC,EACpCP,UAAU,CAACd,GAAG,CAAC,UAACC,CAAC,EAAE8B,KAAK;IAAA,oBACvB1B,4CAAA,CAAAC,aAAA;MAAIiB,GAAG,EAAE,kBAAkB,GAACQ,KAAM;MAACV,SAAS,EAAC;IAAiB,gBAC5DhB,4CAAA,CAAAC,aAAA;MAAMmB,KAAK,EAAE;QAAC,OAAO,EAAE;MAAK;IAAE,GAAExB,CAAQ,CACtC,CAAC;EAAA,CACN,CACC,CAAC,EACJhB,QAAQ,CAACe,GAAG,CAAC,UAACmC,KAAK,EAAEC,QAAQ;IAAA,oBAC5B/B,4CAAA,CAAAC,aAAA;MAAIiB,GAAG,EAAE,MAAM,GAACY;IAAM,gBACpB9B,4CAAA,CAAAC,aAAA;MAAIe,SAAS,EAAC;IAAW,GAAEc,KAAU,CAAC,eACtC9B,4CAAA,CAAAC,aAAA;MAAIe,SAAS,EAAC;IAAY,GAAE1B,WAAW,GAAGyC,QAAQ,GAAG,EAAO,CAAC,EAC5DpD,SAAS,CAACmD,KAAK,CAAC,CAACE,KAAK,CAAC,EAAE,CAAC,CAACrC,GAAG,CAAC,UAACsC,MAAM,EAAEP,KAAK;MAAA,oBAC5C1B,4CAAA,CAAAC,aAAA;QACEiB,GAAG,EAAE,MAAM,GAACQ,KAAM;QAClBV,SAAS,EAAC,YAAY;QACtBI,KAAK,EAAE;UAAC,iBAAiB,EAAEb,gBAAgB,CAACuB,KAAK,CAAC,CAACJ,KAAK,CAAC;UAAE,OAAO,EAAElC,IAAI,GAAG;QAAI;MAAE,GAEhFJ,YAAY,GAAG6C,MAAM,GAAG,EAAE,EAC1BA,MAAM,KAAK,GAAG,iBACbjC,4CAAA,CAAAC,aAAA;QAAMe,SAAS,EAAC;MAAoB,GAAEc,KAAK,GAAG,GAAG,GAAG1B,gBAAgB,CAAC0B,KAAK,CAAC,CAACJ,KAAK,CAAQ,CAEzF,CAAC;IAAA,CACN,CACC,CAAC;EAAA,CACN,CACI,CACA,CAAC,EACP3B,4BACE,CAAC;AAEV;AAEA,SAASwB,cAAcA,CAACC,MAAM,EAAEF,MAAM,EAAE;EACtC,IAAIY,GAAG,GAAG,CAAC;IAAEC,GAAG,GAAG,CAAC;EACpB,IAAIb,MAAM,EAAE;IACVY,GAAG,GAAGZ,MAAM,CAAC,CAAC,CAAC;IACfa,GAAG,GAAGb,MAAM,CAACA,MAAM,CAACT,MAAM,GAAG,CAAC,CAAC;EACjC;EACA,OAAOW,MAAM,CAAC7B,GAAG,CAAC,UAACC,CAAC;IAAA,OAAK,CAACA,CAAC,GAAGsC,GAAG,KAAKC,GAAG,GAAGD,GAAG,CAAC;EAAA,EAAC;AACnD;AAEA,SAASb,iBAAiBA,CAACC,MAAM,EAAwB;EAAA,IAAtBc,YAAY,GAAAC,SAAA,CAAAxB,MAAA,QAAAwB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,KAAK;EACrD;EACA,IAAI,CAACf,MAAM,EAAE;IACXA,MAAM,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;EACtB;EACA,IAAIY,GAAG,GAAGZ,MAAM,CAAC,CAAC,CAAC;EACnB,IAAIa,GAAG,GAAGb,MAAM,CAACA,MAAM,CAACT,MAAM,GAAG,CAAC,CAAC;EACnC,IAAI0B,eAAe,GAAGhB,cAAc,CAACD,MAAM,EAAEA,MAAM,CAAC;EACpD,oBACEtB,4CAAA,CAAAC,aAAA,CAAAD,4CAAA,CAAAE,QAAA,QACCqC,eAAe,CAAC5C,GAAG,CAAC,UAACC,CAAC,EAAEc,CAAC;IAAA,oBACxBV,4CAAA,CAAAC,aAAA;MAAKiB,GAAG,EAAE,QAAQ,GAACR,CAAE;MAACU,KAAK,EAAE;QAAC,UAAU,EAAE,UAAU;QAAE,QAAQ,KAAAoB,MAAA,CAAK5C,CAAC,GAAG,GAAG,MAAG;QAAE,OAAO,EAAEwC,YAAY;QAAE,MAAM,iBAAAI,MAAA,CAAiBJ,YAAY,YAAS;QAAE,cAAc,EAAE;MAAmB;IAAE,CAAM,CAAC;EAAA,CACjM,CAAC,EACDG,eAAe,CAAC5C,GAAG,CAAC,UAACC,CAAC,EAAEc,CAAC;IAAA,oBACxBV,4CAAA,CAAAC,aAAA;MAAMiB,GAAG,EAAE,aAAa,GAACR,CAAE;MAAAU,KAAK,EAAE;QAAC,UAAU,EAAE,UAAU;QAAE,QAAQ,KAAAoB,MAAA,CAAK5C,CAAC,GAAG,GAAG,MAAG;QAAE,MAAM,iBAAA4C,MAAA,CAAiBJ,YAAY,MAAG;QAAE,WAAW,EAAE;MAAsB;IAAE,GAAEd,MAAM,CAACZ,CAAC,CAAC,CAAC+B,OAAO,CAAC,CAAC,CAAO,CAAC;EAAA,CAC/L,CACC,CAAC;AAEP;AAEA,SAASjC,iBAAiBA,CAAC7B,SAAS,EAAE+D,MAAM,EAAE;EAC5C,IAAMC,MAAM,GAAGhC,MAAM,CAACC,IAAI,CAACjC,SAAS,CAAC;EACrC,IAAMiE,UAAU,GAAGjE,SAAS,CAACgE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC9B,MAAM;EAC9C,IAAMgC,MAAM,GAAG,CAAC,CAAC;EACjBF,MAAM,CAACG,OAAO,CAAC,UAACrE,EAAE;IAAA,OAAKoE,MAAM,CAACpE,EAAE,CAAC,GAAG,EAAE;EAAA,EAAC;EAAC,IAAAsE,KAAA,YAAAA,MAAArC,CAAA,EACH;IACnC,IAAIsC,MAAM,GAAGL,MAAM,CAAChD,GAAG,CAAC,UAAClB,EAAE;MAAA,OAAKE,SAAS,CAACF,EAAE,CAAC,CAACiC,CAAC,CAAC;IAAA,EAAC;IACjD,IAAIuC,aAAa,GAAGC,8EAAgB,CAACF,MAAM,EAAEN,MAAM,CAAC;IACpDC,MAAM,CAACG,OAAO,CAAC,UAACrE,EAAE,EAAEiD,KAAK;MAAA,OAAKmB,MAAM,CAACpE,EAAE,CAAC,CAACqC,IAAI,CAACmC,aAAa,CAACvB,KAAK,CAAC,CAAC;IAAA,EAAC;EACtE,CAAC;EAJD,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkC,UAAU,EAAElC,CAAC,EAAE;IAAAqC,KAAA,CAAArC,CAAA;EAAA;EAKnC,OAAOmC,MAAM;AACf;AAEA,SAASvC,oBAAoBA,CAAC3B,SAAS,EAAE;EACvC,IAAMwE,GAAG,GAAG,CAAC,CAAC;EACd,SAAAC,EAAA,MAAAC,eAAA,GAAyB1C,MAAM,CAAC2C,OAAO,CAAC3E,SAAS,CAAC,EAAAyE,EAAA,GAAAC,eAAA,CAAAxC,MAAA,EAAAuC,EAAA,IAAE;IAA/C,IAAAG,kBAAA,GAAAC,cAAA,CAAAH,eAAA,CAAAD,EAAA;MAAOlC,GAAG,GAAAqC,kBAAA;MAAEE,GAAG,GAAAF,kBAAA;IAClBJ,GAAG,CAACjC,GAAG,CAAC,GAAG,EAAE;IACb,IAAIwC,MAAM,GAAG,CAAC;IAAC,IAAAC,SAAA,GAAAC,0BAAA,CACDH,GAAG;MAAAI,KAAA;IAAA;MAAjB,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAmB;QAAA,IAAVpE,CAAC,GAAAiE,KAAA,CAAApC,KAAA;QACRiC,MAAM,IAAK9D,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAE;QAC7BuD,GAAG,CAACjC,GAAG,CAAC,CAACJ,IAAI,CAAC4C,MAAM,CAAC;MACvB;IAAC,SAAAO,GAAA;MAAAN,SAAA,CAAAO,CAAA,CAAAD,GAAA;IAAA;MAAAN,SAAA,CAAAQ,CAAA;IAAA;EACH;EACA,OAAOhB,GAAG;AACZ;AAEA,SAAShD,YAAYA,CAAAiE,IAAA,EAAqD;EAAA,IAAnD3F,EAAE,GAAA2F,IAAA,CAAF3F,EAAE;IAAEG,QAAQ,GAAAwF,IAAA,CAARxF,QAAQ;IAAEC,QAAQ,GAAAuF,IAAA,CAARvF,QAAQ;IAAEY,WAAW,GAAA2E,IAAA,CAAX3E,WAAW;IAAEK,WAAW,GAAAsE,IAAA,CAAXtE,WAAW;EACrE;EACA,IAAMuE,aAAa,GAAGC,qBAAqB,CAAC1F,QAAQ,CAAC;EACrD,IAAM2F,aAAa,GAAGD,qBAAqB,CAACzF,QAAQ,CAAC;EACrD,oBACEmB,4CAAA,CAAAC,aAAA;IAAKe,SAAS,EAAC;EAAc,gBAC3BhB,4CAAA,CAAAC,aAAA;IAAKe,SAAS,EAAC;EAAuB,gBACpChB,4CAAA,CAAAC,aAAA,aAAI,oBAAsB,CAAC,eAC3BD,4CAAA,CAAAC,aAAA,CAACuE,8DAAa;IAACC,KAAK,EAAE,eAAe,GAAChG,EAAG;IAACiG,IAAI,EAAEL,aAAc;IAACM,OAAO,EAAElF,WAAY;IAACuB,SAAS,EAAC;EAAuB,GACnHqD,aAAa,CAAC1E,GAAG,CAAC,UAACiF,IAAI;IAAA,oBAAM5E,4CAAA,CAAAC,aAAA;MAAKiB,GAAG,EAAE0D,IAAI,CAACnG,EAAG;MAACuC,SAAS,EAAC;IAA4B,GAAE4D,IAAI,CAAC/E,IAAU,CAAC;EAAA,CAAC,CAC7F,CACZ,CAAC,eACNG,4CAAA,CAAAC,aAAA;IAAKe,SAAS,EAAC;EAAuB,gBACpChB,4CAAA,CAAAC,aAAA,aAAI,oBAAsB,CAAC,eAC3BD,4CAAA,CAAAC,aAAA,CAACuE,8DAAa;IAACC,KAAK,EAAE,eAAe,GAAChG,EAAG;IAACiG,IAAI,EAAEH,aAAc;IAACI,OAAO,EAAE7E,WAAY;IAACkB,SAAS,EAAC;EAAuB,GACnHnC,QAAQ,CAACgC,MAAM,GACd0D,aAAa,CAAC5E,GAAG,CAAC,UAACiF,IAAI;IAAA,oBAAM5E,4CAAA,CAAAC,aAAA;MAAKiB,GAAG,EAAE0D,IAAI,CAACnG,EAAG;MAACuC,SAAS,EAAC;IAA4B,GAAE4D,IAAI,CAAC/E,IAAU,CAAC;EAAA,CAAC,CAAC,gBAC1GG,4CAAA,CAAAC,aAAA;IAAGe,SAAS,EAAC;EAAsB,GAAC,mEAAoE,CAE7F,CACZ,CACF,CAAC;AAEV;AAEA,SAASsD,qBAAqBA,CAACO,CAAC,EAAE;EAChC,OAAOA,CAAC,CAAClF,GAAG,CAAC,UAACiF,IAAI;IAAA,OAAM;MACtBnG,EAAE,EAAE,WAAW,GAACmG,IAAI;MACpBE,QAAQ,EAAE,KAAK;MACfC,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAE,KAAK;MACfnF,IAAI,EAAE+E;IACR,CAAC;EAAA,CAAC,CAAC;AACL;AAEArG,UAAU,CAAC0G,YAAY,GAAG,CAAC,CAAC;AAE5B1G,UAAU,CAAC2G,SAAS,GAAG;EACnB;AACJ;AACA;EACIzG,EAAE,EAAE0G,iDAAS,CAACC,MAAM;EAEpB;AACJ;AACA;EACI1G,KAAK,EAAEyG,iDAAS,CAACC,MAAM,CAACC,UAAU;EAElC;AACJ;AACA;EACI1G,SAAS,EAAEwG,iDAAS,CAACG,MAAM;EAE3B;AACJ;AACA;EACIxG,MAAM,EAAEqG,iDAAS,CAACI,KAAK;EAEvB;AACJ;AACA;EACIxG,YAAY,EAAEoG,iDAAS,CAACC,MAAM;EAE9B;AACJ;AACA;EACIxG,QAAQ,EAAEuG,iDAAS,CAACI,KAAK;EAEzB;AACJ;AACA;EACI1G,QAAQ,EAAEsG,iDAAS,CAACI,KAAK;EAEzB;AACJ;AACA;AACA;EACIvG,QAAQ,EAAEmG,iDAAS,CAACK;AACxB,CAAC,C","file":"ccf3566-main-wps-hmr.js","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactSortable } from 'react-sortablejs';\nimport './DashSeqaln.react.css';\nimport { color_msa_column } from '../msa_color_schemes.js';\n\n// NOTE: series values must be scaled between 0 and 1\n\n/**\n * ExampleComponent is an example component.\n */\nexport default function DashSeqaln(props) {\n  const {id, title, alignment, included, excluded, series, color_scheme, setProps} = props;\n  const {allow_sequence_selection = true, show_letters = true, show_seqnum = false, zoom = 10} = props;\n  const setIncluded = (items) => {\n    setProps({included: items.map((x) => x.name)});\n  };\n  const setExcluded = (items) => {\n    setProps({excluded: items.map((x) => x.name)});\n  };\n  let sequence_selection_component = <></>;\n  if (allow_sequence_selection === true) {\n    sequence_selection_component = Seqselection({\n      id: id,\n      included: included,\n      excluded: excluded,\n      setIncluded: setIncluded,\n      setExcluded: setExcluded\n    });\n  }\n  const alignment_cumsum = useMemo(() => get_alignment_cumsum(alignment), [alignment]);\n  const alignment_colors = useMemo(() => make_color_scheme(alignment, color_scheme), [alignment, color_scheme]);\n  const aln_breaks = [];\n  for (let i = 0; i < alignment[Object.keys(alignment)[0]].length; i++) {\n    if (i % 10 === 0)\n      aln_breaks.push(String(i+1));\n    else\n      aln_breaks.push(\"\");\n  }\n  return (\n    <div id={id} className=\"DashSeqaln\">\n      {title && (<h2 className=\"title\">{title}</h2>)}\n      <table>\n        {series.map((seriesItem) => (\n          <thead key={\"series-\"+seriesItem.label} className=\"series\">\n          <tr>\n            <td className=\"series-label\">\n              {seriesItem.label}\n            </td>\n            <td className=\"series-scale\" style={{\"position\": \"relative\", \"borderRight\": \"1px solid black\"}}>\n              {make_series_scale(seriesItem?.breaks)}\n            </td>\n            {rescale_series(seriesItem.values, seriesItem?.breaks).map((value, index) => (\n              <td key={\"series-\"+index} className=\"series-values\" style={{\"height\": seriesItem.height || \"100px\"}}>\n                <div style={{\"backgroundColor\": seriesItem.color || \"black\", \"height\": (100 * value) + \"%\", \"position\": \"relative\"}}>\n                  <span className=\"series-values-tooltip\">{(index + 1) + \":\" + seriesItem.values[index]}</span>\n                </div>\n              </td>\n            ))}\n          </tr>\n          <tr><td colSpan=\"100%\" className=\"series-separator\"></td></tr>\n          </thead>\n        ))}\n      <tbody className=\"aln\">\n        <tr className=\"aln-axis\">\n          <td className=\"aln-axis-label\"></td>\n          <td className=\"aln-axis-seqnum\"></td>\n          {aln_breaks.map((x, index) => (\n            <td key={\"aln-axis-resnum-\"+index} className=\"aln-axis-resnum\">\n              <span style={{\"width\": \"0px\"}}>{x}</span>\n            </td>\n          ))}\n        </tr>\n        {included.map((seqId, seqIndex) => (\n          <tr key={\"aln-\"+seqId}>\n            <td className=\"aln-label\">{seqId}</td>\n            <td className=\"aln-seqnum\">{show_seqnum ? seqIndex : \"\"}</td>\n            {alignment[seqId].split(\"\").map((letter, index) => (\n              <td\n                key={\"aln-\"+index}\n                className=\"aln-letter\"\n                style={{\"backgroundColor\": alignment_colors[seqId][index], \"width\": zoom + \"px\"}}\n              >\n                {show_letters ? letter : \"\"}\n                {letter !== \"-\" && (\n                  <span className=\"aln-letter-tooltip\">{seqId + \":\" + alignment_cumsum[seqId][index]}</span>\n                )}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n      </table>\n      {sequence_selection_component}\n    </div>\n  );\n}\n\nfunction rescale_series(values, breaks) {\n  let min = 0, max = 1;\n  if (breaks) {\n    min = breaks[0];\n    max = breaks[breaks.length - 1];\n  }\n  return values.map((x) => (x - min) / (max - min));\n}\n\nfunction make_series_scale(breaks, breaks_width = \"8px\") {\n  // for now we ignore the range and use a default scale for everything\n  if (!breaks) {\n    breaks = [0, 0.5, 1];\n  }\n  let min = breaks[0];\n  let max = breaks[breaks.length - 1];\n  let breaks_rescaled = rescale_series(breaks, breaks);\n  return (\n    <>\n    {breaks_rescaled.map((x, i) => (\n      <div key={\"break-\"+i} style={{\"position\": \"absolute\", \"bottom\": `${x * 100}%`, \"width\": breaks_width, \"left\": `calc(100% - ${breaks_width} + 1px)`, \"borderBottom\": \"0.5px solid black\"}}></div>\n    ))}\n    {breaks_rescaled.map((x, i) => (\n      <div  key={\"breaklabel-\"+i}style={{\"position\": \"absolute\", \"bottom\": `${x * 100}%`, \"left\": `calc(100% - ${breaks_width})`, \"transform\": \"translate(-100%, 0%)\"}}>{breaks[i].toFixed(1)}</div>\n    ))}\n    </>\n  );\n}\n\nfunction make_color_scheme(alignment, scheme) {\n  const seqIds = Object.keys(alignment);\n  const aln_length = alignment[seqIds[0]].length;\n  const colors = {};\n  seqIds.forEach((id) => colors[id] = []);\n  for (let i = 0; i < aln_length; i++) {\n    let column = seqIds.map((id) => alignment[id][i]);\n    let column_colors = color_msa_column(column, scheme);\n    seqIds.forEach((id, index) => colors[id].push(column_colors[index]));\n  }\n  return colors;\n}\n\nfunction get_alignment_cumsum(alignment) {\n  const res = {};\n  for (const [key, val] of Object.entries(alignment)) {\n    res[key] = [];\n    let cumsum = 0;\n    for (let x of val) {\n      cumsum += (x === \"-\" ? 0 : 1);\n      res[key].push(cumsum);\n    }\n  }\n  return res;\n}\n\nfunction Seqselection({id, included, excluded, setIncluded, setExcluded}) {\n  // sortablejs needs items as objects with at least the `id` field.\n  const includedItems = make_sortablejs_items(included);\n  const excludedItems = make_sortablejs_items(excluded);\n  return (\n    <div className=\"seqselection\">\n      <div className=\"seqselection-included\">\n        <h3>Included sequences</h3>\n        <ReactSortable group={\"seqselection-\"+id} list={includedItems} setList={setIncluded} className=\"seqselection-sortable\">\n          {includedItems.map((item) => (<div key={item.id} className=\"seqselection-sortable-item\">{item.name}</div>))}\n        </ReactSortable>\n      </div>\n      <div className=\"seqselection-excluded\">\n        <h3>Excluded sequences</h3>\n        <ReactSortable group={\"seqselection-\"+id} list={excludedItems} setList={setExcluded} className=\"seqselection-sortable\">\n          {excluded.length ?\n            excludedItems.map((item) => (<div key={item.id} className=\"seqselection-sortable-item\">{item.name}</div>)) :\n            <p className=\"seqselection-message\">Drag and drop a sequence ID here to remove it from the alignment.</p>\n          }\n        </ReactSortable>\n      </div>\n    </div>\n  );\n}\n\nfunction make_sortablejs_items(l) {\n  return l.map((item) => ({\n    id: \"sortable-\"+item,\n    selected: false,\n    chosen: false,\n    filtered: false,\n    name: item,\n  }));\n}\n\nDashSeqaln.defaultProps = {};\n\nDashSeqaln.propTypes = {\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * A label that will be printed when this component is rendered.\n     */\n    title: PropTypes.string.isRequired,\n\n    /**\n     * An object representing the MSA.\n     */\n    alignment: PropTypes.object,\n\n    /**\n     * List of objects, each containing the data for a bar plot.\n     */\n    series: PropTypes.array,\n\n    /**\n     * The color scheme for the alignment, from Jalview.\n     */\n    color_scheme: PropTypes.string,\n\n    /**\n     * List of sequence IDs to show in the alignment.\n     */\n    included: PropTypes.array,\n\n    /**\n     * List of sequence IDs to NOT show in the alignment.\n     */\n    excluded: PropTypes.array,\n\n    /**\n     * Dash-assigned callback that should be called to report property changes\n     * to Dash, to make them available for callbacks.\n     */\n    setProps: PropTypes.func\n};\n"],"sourceRoot":""}