{"version":3,"sources":["webpack:///./src/lib/components/DashSeqaln.react.js"],"names":["DashSeqaln","props","id","label","aln","series","setProps","value","React","createElement","className","Object","keys","map","key","height","index","style","colspan","split","letter","defaultProps","propTypes","PropTypes","string","isRequired","object","func"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACJ;AACU;AACb;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,UAAUA,CAACC,KAAK,EAAE;EACxC,IAAOC,EAAE,GAAyCD,KAAK,CAAhDC,EAAE;IAAEC,KAAK,GAAkCF,KAAK,CAA5CE,KAAK;IAAEC,GAAG,GAA6BH,KAAK,CAArCG,GAAG;IAAEC,MAAM,GAAqBJ,KAAK,CAAhCI,MAAM;IAAEC,QAAQ,GAAWL,KAAK,CAAxBK,QAAQ;IAAEC,KAAK,GAAIN,KAAK,CAAdM,KAAK;EAC9C,oBACEC,4CAAA,CAAAC,aAAA;IAAKP,EAAE,EAAEA,EAAG;IAACQ,SAAS,EAAC;EAAY,gBACjCF,4CAAA,CAAAC,aAAA,gBACGE,MAAM,CAACC,IAAI,CAACP,MAAM,CAAC,CAACQ,GAAG,CAAC,UAACX,EAAE;IAAA,oBAC1BM,4CAAA,CAAAC,aAAA;MAAIK,GAAG,EAAE,SAAS,GAAGZ;IAAG,gBACtBM,4CAAA,CAAAC,aAAA;MAAIC,SAAS,EAAC;IAAc,GAAER,EAAO,CAAC,EACrCG,MAAM,CAACH,EAAE,CAAC,CAACW,GAAG,CAAC,UAACE,MAAM,EAAEC,KAAK;MAAA,oBAC5BR,4CAAA,CAAAC,aAAA;QAAIK,GAAG,EAAE,SAAS,GAAGE;MAAM,gBACzBR,4CAAA,CAAAC,aAAA;QAAKQ,KAAK,EAAE;UAAC,iBAAiB,EAAE,KAAK;UAAE,QAAQ,EAAE,GAAG,GAAGF;QAAM;MAAE,CAAM,CACnE,CAAC;IAAA,CACN,CACC,CAAC;EAAA,CACN,CAAC,eACFP,4CAAA,CAAAC,aAAA;IAAIK,GAAG,EAAC;EAAK,gBAACN,4CAAA,CAAAC,aAAA;IAAIS,OAAO,EAAC;EAAM,gBAACV,4CAAA,CAAAC,aAAA;IAAIQ,KAAK,EAAE;MAAC,QAAQ,EAAE,KAAK;MAAE,QAAQ,EAAE;IAAsB;EAAE,CAAK,CAAK,CAAK,CAAC,EAC/GN,MAAM,CAACC,IAAI,CAACR,GAAG,CAAC,CAACS,GAAG,CAAC,UAACX,EAAE;IAAA,oBACvBM,4CAAA,CAAAC,aAAA;MAAIK,GAAG,EAAE,MAAM,GAAGZ;IAAG,gBACnBM,4CAAA,CAAAC,aAAA;MAAIC,SAAS,EAAC;IAAW,GAAER,EAAO,CAAC,EAClCE,GAAG,CAACF,EAAE,CAAC,CAACiB,KAAK,CAAC,EAAE,CAAC,CAACN,GAAG,CAAC,UAACO,MAAM,EAAEJ,KAAK;MAAA,oBACnCR,4CAAA,CAAAC,aAAA;QAAIK,GAAG,EAAE,MAAM,GAAGE;MAAM,GAAEI,MAAW,CAAC;IAAA,CACvC,CACC,CAAC;EAAA,CACN,CACI,CACJ,CAAC;AAEV;AAEApB,UAAU,CAACqB,YAAY,GAAG,CAAC,CAAC;AAE5BrB,UAAU,CAACsB,SAAS,GAAG;EACnB;AACJ;AACA;EACIpB,EAAE,EAAEqB,iDAAS,CAACC,MAAM;EAEpB;AACJ;AACA;EACIrB,KAAK,EAAEoB,iDAAS,CAACC,MAAM,CAACC,UAAU;EAElC;AACJ;AACA;EACIrB,GAAG,EAAEmB,iDAAS,CAACG,MAAM;EAErB;AACJ;AACA;EACIrB,MAAM,EAAEkB,iDAAS,CAACG,MAAM;EAExB;AACJ;AACA;EACInB,KAAK,EAAEgB,iDAAS,CAACC,MAAM;EAEvB;AACJ;AACA;AACA;EACIlB,QAAQ,EAAEiB,iDAAS,CAACI;AACxB,CAAC,C","file":"a52c01e-main-wps-hmr.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ReactSortable from \"react-sortablejs\";\nimport './DashSeqaln.react.css';\n\n/**\n * ExampleComponent is an example component.\n * It takes a property, `label`, and\n * displays it.\n * It renders an input with the property `value`\n * which is editable by the user.\n */\nexport default function DashSeqaln(props) {\n  const {id, label, aln, series, setProps, value} = props;\n  return (\n    <div id={id} className=\"DashSeqaln\">\n      <table>\n        {Object.keys(series).map((id) => (\n          <tr key={\"series-\" + id}>\n            <td className=\"series-label\">{id}</td>\n            {series[id].map((height, index) => (\n              <td key={\"series-\" + index}>\n                <div style={{\"backgroundColor\": \"red\", \"height\": 100 * height}}></div>\n              </td>\n            ))}\n          </tr>\n        ))}\n        <tr key=\"sep\"><td colspan=\"100%\"><hr style={{\"margin\": \"0px\", \"border\": \"dashed 1px lightGray\"}}></hr></td></tr>\n        {Object.keys(aln).map((id) => (\n          <tr key={\"aln-\" + id}>\n            <td className=\"aln-label\">{id}</td>\n            {aln[id].split(\"\").map((letter, index) => (\n              <td key={\"aln-\" + index}>{letter}</td>\n            ))}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n}\n\nDashSeqaln.defaultProps = {};\n\nDashSeqaln.propTypes = {\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * A label that will be printed when this component is rendered.\n     */\n    label: PropTypes.string.isRequired,\n\n    /**\n     * An object containing the MSA as strings.\n     */\n    aln: PropTypes.object,\n\n    /**\n     * Object of numeric lists for the bar plots.\n     */\n    series: PropTypes.object,\n\n    /**\n     * The value displayed in the input.\n     */\n    value: PropTypes.string,\n\n    /**\n     * Dash-assigned callback that should be called to report property changes\n     * to Dash, to make them available for callbacks.\n     */\n    setProps: PropTypes.func\n};\n"],"sourceRoot":""}